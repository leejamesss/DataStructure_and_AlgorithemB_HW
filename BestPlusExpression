import math
#有m个加法运算符，n个数，求最大值

#对数进行预处理，然后直接查表
def V(m,n):
    if m==0:
        return n
    elif n<m+1:
        return math.inf
    else:
        for i in range(m,n):
            return min(V(m-1,i),V(i+1,n))
def main():
    m,n = map(int,input().split())
    print(V(m,n))
main()






# def V(m,n):
#     if m==0:
#         return n
#     elif n<m+1:
#         return math.inf
#     else:
#         for i in range(m,n):
#             return min(V(m-1,i),V(i+1,n))   





# 预处理：提前先算好NUM[i][j]，然后直接查表
# # n = int(input())
# # D = []
# # maxSum = [[-1 for j in range(i+1)] for i in range(n)]
# # def main():
# #     for i  in range(n):
# #         lst = list(map(int,input().split()))
# #         D.append(lst)
# #     for i in range(n):
# #         maxSum[n-1][i] = D[n-1][i]
# #     for i in range(n-2,-1,-1):
# #         for j in range(0,i+1):
# #             maxSum[i][j] =max(maxSum[i+1][j],maxSum[i+1][j+1]) + D[i][j]

# #     for i in range(n):
# #         for j in range(i+1):
# #             print(maxSum[i][j],end=' ')
# #         print()
# # main()

# #预处理：提前先算好NUM[i][j]，然后直接查表

#高精度计算：通过列表进行计算
